{"version":3,"sources":["webpack:///./src/components/SEO.jsx","webpack:///./src/components/Layout/Header.jsx","webpack:///./src/components/Layout/TableOfContents.jsx","webpack:///./src/templates/doc.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks.jsx","webpack:///./src/components/Layout/Navigation.jsx","webpack:///./src/layouts/theme.js","webpack:///./src/layouts/index.jsx"],"names":["SEO","render","title","description","image","postURL","_this$props","this","props","postNode","postPath","postSEO","postMeta","frontmatter","excerpt","cover","config","siteUrl","pathPrefix","siteTitle","siteDescription","siteLogo","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","@id","headline","react_default","a","createElement","Helmet_default","content","type","JSON","stringify","property","siteFBAppID","userTwitter","Component","MainHeader","SiteContainer","Navigation","React","styled","div","withConfig","displayName","componentId","theme","brand","Links","_ref","entries","StyledLinkList","map","_ref2","key","entry","EntryListItem","gatsby_link_default","to","childMarkdownRemark","fields","slug","EntryTitle","ChapterList","_ref3","chapters","_ref3$level","level","StyledChapterList","ChapterListItem","ChapterTitle","TableOfContents_Links","chapter","index","Object","assign","TableOfContents","_ref4","TOCWrapper","TableOfContents_ChapterList","sitePadding","ol","h6","li","h5","_ref5","_ref6","_ref7","accentDark","accent","DocTemplate","pathContext","data","postBySlug","post","id","category_id","postDefaultCategoryID","layouts","location","components_SEO","BodyGrid","HeaderContainer","Header","ToCContainer","Layout_TableOfContents","tableOfContents","BodyContainer","dangerouslySetInnerHTML","__html","html","contentWidthLaptop","lightGrey","pageQuery","module","exports","blogPostDir","docDir","siteRss","repoLink","copyright","Date","getFullYear","themeColor","backgroundColor","toCChapters","Container","UserIcon","ink","iconStyle","width","height","UserLinks","className","href","siteConfig","index_esm","style","NavContainer","components_UserLinks","darkGrey","errorRed","codeEditBlue","codeEditGreen","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","slice","currentPath","pathname","replace","includes","children","styled_components_browser_esm"],"mappings":"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","file":"component---src-templates-doc-jsx-d10e337fb1fac7045aa4.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport config from '../../data/SiteConfig'\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props\n    let title\n    let description\n    let image\n    let postURL\n    if (postSEO) {\n      const postMeta = postNode.frontmatter\n      title = postMeta.title\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt\n      image = postMeta.cover\n      postURL = config.siteUrl + config.pathPrefix + postPath\n    } else {\n      title = config.siteTitle\n      description = config.siteDescription\n      image = config.siteLogo\n    }\n    const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix\n    image = config.siteUrl + realPrefix + image\n    const blogURL = config.siteUrl + config.pathPrefix\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n      }\n    ]\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image\n          },\n          description\n        }\n      ])\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : ''}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    )\n  }\n}\n\nexport default SEO\n","import React from 'react'\nimport styled from 'styled-components'\nimport Navigation from './Navigation'\n\nclass MainHeader extends React.Component {\n  render() {\n    return (\n      <SiteContainer>\n        <Navigation />\n      </SiteContainer>\n    )\n  }\n}\n\nconst SiteContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: ${props => props.theme.brand};\n  padding: 25px;\n`\n\nexport default MainHeader\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled from 'styled-components'\n\n/* eslint react/no-array-index-key: \"off\" */\n\nconst Links = ({ entries }) => (\n  <StyledLinkList>\n    {entries.map(({ entry }, key) => (\n      <EntryListItem key={key}>\n        <Link to={entry.childMarkdownRemark.fields.slug}>\n          <EntryTitle>{entry.childMarkdownRemark.frontmatter.title}</EntryTitle>\n        </Link>\n      </EntryListItem>\n    ))}\n  </StyledLinkList>\n)\n\nconst ChapterList = ({ chapters, entries, title, level = 0 }) => (\n  <StyledChapterList>\n    {title && (\n      <ChapterListItem key={`${title}${level}`}>\n        <ChapterTitle level={level}>{title}</ChapterTitle>\n      </ChapterListItem>\n    )}\n    <ChapterListItem>{entries && <Links entries={entries} />}</ChapterListItem>\n    <ChapterListItem>\n      {chapters &&\n        chapters.map((chapter, index) => (\n          <ChapterList {...chapter} level={level + 1} key={`${index}`} />\n        ))}\n    </ChapterListItem>\n  </StyledChapterList>\n)\n\nconst TableOfContents = ({ chapters }) => (\n  <TOCWrapper>\n    {chapters.map((chapter, index) => (\n      <ChapterList {...chapter} key={index} />\n    ))}\n  </TOCWrapper>\n)\n\nexport default TableOfContents\n\nconst TOCWrapper = styled.div`\n  padding: ${props => props.theme.sitePadding};\n  margin: 0;\n`\n\nconst StyledChapterList = styled.ol`\n  list-style: none;\n  margin: 0;\n`\n\nconst StyledLinkList = styled.ol`\n  list-style: none;\n`\n\nconst EntryTitle = styled.h6`\n  display: inline-block;\n  font-weight: 200;\n  color: black;\n  margin: 0;\n  line-height: 1.5;\n  border-bottom: 1px solid transparent;\n  text-decoration: none;\n`\n\nconst ChapterListItem = styled.li`\n  margin: 0;\n`\n\nconst EntryListItem = styled.li`\n  margin: 0;\n  a:hover {\n    border-bottom: 1px solid black;\n  }\n`\n\nconst ChapterTitle = styled.h5`\n  font-weight: ${({ level }) => {\n    switch (level % 3) {\n      case 1:\n        return '600'\n      case 2:\n        return '400'\n      default:\n        return '200'\n    }\n  }};\n  font-size: ${({ level }) => {\n    switch (level % 3) {\n      case 1:\n        return '2.2rem'\n      case 2:\n        return '1.8rem'\n      default:\n        return '2.8rem'\n    }\n  }};\n  color: ${({ level, theme }) => {\n    switch (level % 3) {\n      case 1:\n        return 'black'\n      case 2:\n        return theme.accentDark\n      default:\n        return theme.accent\n    }\n  }};\n`\n","import { graphql } from 'gatsby'\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\n\nimport SEO from '../components/SEO'\nimport SiteHeader from '../components/Layout/Header'\nimport config from '../../data/SiteConfig'\nimport TableOfContents from '../components/Layout/TableOfContents'\nimport Layout from '../layouts'\n\nexport default class DocTemplate extends React.Component {\n  render() {\n    const { slug } = this.props.pathContext\n    const postNode = this.props.data.postBySlug\n    const post = postNode.frontmatter\n    if (!post.id) {\n      post.id = slug\n    }\n    if (!post.id) {\n      post.category_id = config.postDefaultCategoryID\n    }\n    return (\n      <Layout location={this.props.location}>\n        <div>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <BodyGrid>\n            <HeaderContainer>\n              <SiteHeader location={this.props.location} />\n            </HeaderContainer>\n            <ToCContainer>\n              <TableOfContents\n                chapters={this.props.data.tableOfContents.chapters}\n              />\n            </ToCContainer>\n            <BodyContainer>\n              <div>\n                <h1>{post.title}</h1>\n                <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              </div>\n            </BodyContainer>\n          </BodyGrid>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nconst BodyGrid = styled.div`\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 75px 1fr;\n  grid-template-columns: 300px 1fr;\n\n  @media screen and (max-width: 600px) {\n    display: flex;\n    flex-direction: column;\n    height: inherit;\n  }\n`\n\nconst BodyContainer = styled.div`\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  overflow: scroll;\n  justify-self: center;\n  width: 100%;\n  padding: ${props => props.theme.sitePadding};\n  @media screen and (max-width: 600px) {\n    order: 2;\n  }\n\n  & > div {\n    max-width: ${props => props.theme.contentWidthLaptop};\n    margin: auto;\n  }\n\n  & > h1 {\n    color: ${props => props.theme.accentDark};\n  }\n`\n\nconst HeaderContainer = styled.div`\n  grid-column: 1 / 3;\n  grid-row: 1 / 2;\n  z-index: 2;\n  @media screen and (max-width: 600px) {\n    order: 1;\n  }\n`\n\nconst ToCContainer = styled.div`\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  background: ${props => props.theme.lightGrey};\n  overflow: scroll;\n  @media screen and (max-width: 600px) {\n    order: 3;\n    overflow: inherit;\n  }\n`\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query DocBySlug($slug: String!) {\n    postBySlug: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n    tableOfContents: docsJson {\n      chapters {\n        title\n        entries {\n          entry {\n            id\n            childMarkdownRemark {\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","module.exports = {\n  blogPostDir: 'posts', // The name of directory that contains your posts.\n  docDir: 'docs', // The name of the directory that contains lessons or docs.\n  siteTitle: 'Beachball', // Site title.\n  siteTitleAlt: 'The Sunniest Version Bumper', // Alternative site title for SEO.\n  siteLogo: '/logos/logo-1024.png', // Logo used for SEO and manifest.\n  siteUrl: 'https://ericwindmill.com', // Domain of your website without pathPrefix.\n  pathPrefix: '/', // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: 'The Sunniest Semantic Version Bumper', // Website description used for RSS feeds/meta description tag.\n  siteRss: '/rss.xml', // Path to the RSS file.\n  postDefaultCategoryID: 'Tech', // Default category for posts.\n\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  repoLink: 'https://github.com/kenotron/beachball',\n  copyright: `Copyright © ${new Date().getFullYear()} Ken Chau`, // Copyright string for the footer of the website and RSS feed.\n  themeColor: '#c62828', // Used for setting manifest and progress theme colors.\n  backgroundColor: '#e0e0e0', // Used for setting manifest background color.\n  // TODO: Move this literally anywhere better.\n  toCChapters: ['', 'Chapter 1', 'Chapter 2'] // Used to generate the Table Of Contents. Index 0 should be blank.\n}\n","import React, { Component } from 'react'\nimport { FaGithubAlt } from 'react-icons/fa'\nimport siteConfig from '../../data/SiteConfig'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  max-width: 100%;\n`\n\nconst UserIcon = styled.a`\n  margin-left: 25px;\n  color: ${props => props.theme.ink};\n  &:hover {\n    color: rgba(0, 0, 0, 0.2);\n    border-bottom: none;\n  }\n`\n\nconst iconStyle = {\n  width: '20px',\n  height: '20px'\n}\n\nclass UserLinks extends Component {\n  render() {\n    return (\n      <Container className=\"user-links\">\n        <UserIcon href={siteConfig.repoLink}>\n          <FaGithubAlt style={iconStyle} />\n        </UserIcon>\n      </Container>\n    )\n  }\n}\n\nexport default UserLinks\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled from 'styled-components'\nimport UserLinks from '../UserLinks'\n\nconst NavContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  background: ${props => props.theme.brand};\n\n  .nav-link {\n    font-size: 1.6rem;\n    margin-right: 10px;\n    font-weight: 200;\n    color: black;\n  }\n\n  @media screen and (max-width: 600px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    section {\n      margin-bottom: 20px;\n    }\n\n    span {\n      display: none;\n    }\n  }\n`\n\nclass Navigation extends React.Component {\n  render() {\n    return (\n      <NavContainer>\n        <section>\n          <Link className=\"nav-link\" to=\"/\">\n            {' '}\n            HOME{' '}\n          </Link>\n          <Link className=\"nav-link\" to=\"/getting-started\">\n            {' '}\n            DOCS{' '}\n          </Link>\n        </section>\n        <span>\n          <UserLinks />\n        </span>\n      </NavContainer>\n    )\n  }\n}\n\nexport default Navigation\n","const theme = {\n  // named colors:\n  brand: '#f9e659',\n  accent: '#0a5eb7',\n  accentDark: '#35495E',\n  lightGrey: '#F6F6F6',\n  darkGrey: '#91a2a3',\n  ink: 'black',\n  errorRed: '#FF6666',\n  codeEditBlue: '#2973b7',\n  codeEditGreen: '#42b983',\n\n  // content width:\n  contentWidthLaptop: '850px',\n  sitePadding: '25px'\n}\n\nexport default theme\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { ThemeProvider } from 'styled-components'\nimport config from '../../data/SiteConfig'\nimport './css/index.css'\nimport './css/prism-okaidia.css'\nimport theme from './theme'\n\nexport default class MainLayout extends React.Component {\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : '/'\n    const currentPath = this.props.location.pathname\n      .replace(pathPrefix, '')\n      .replace('/', '')\n    let title = ''\n    if (currentPath === '') {\n      title = 'Home'\n    } else if (currentPath === 'tags/') {\n      title = 'Tags'\n    } else if (currentPath.includes('posts')) {\n      title = 'Article'\n    } else if (currentPath.includes('tags/')) {\n      const tag = currentPath\n        .replace('tags/', '')\n        .replace('/', '')\n        .replace('-', ' ')\n      title = `Tagged in ${capitalize(tag)}`\n    } else if (currentPath.includes('categories/')) {\n      const category = currentPath\n        .replace('categories/', '')\n        .replace('/', '')\n        .replace('-', ' ')\n      title = `${capitalize(category)}`\n    }\n    return title\n  }\n\n  render() {\n    const { children } = this.props\n    return (\n      <div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        <ThemeProvider theme={theme}>{children}</ThemeProvider>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}